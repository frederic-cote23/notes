FILE NOTATION
    .md file are markdown file. It's a kind of .html but only in markdown language


    """"""""""""""""""""""""""""""""""""""""""""
    For example, if the index.md file is this
            ---
            layout: home
            ---

    WHat it does, it only call _layout/home.hmtl

    """"""""""""""""""""""""""""""""""""""""""""

HOW IT WORKS

It's a chain

Let's see the exemple

    """"""""""""""""""""""""""""""""""""""""""""
    For example, if the index.md file is this
            ---
            layout: home
            ---
    
    And _layout/home.html is:

            ---
            layout: default
            ---
            <div class="home">
                <p>"Hello World"</p>
            </div>

    And finally, _layout/default.html is:
            <!DOCTYPE html>
                <body>
                    {{ content }}
                </body>
            </html>

    When the root of the website is called (index.md), it opens index.html and the final output is:

            <!DOCTYPE html>
                <body>
                    <div class="home">
                        <p>"Hello World"</p>
                    </div>
                </body>
            </html>   

    As we can see, _layout/home.html called _layout/default.html AND INTEGRATED ITSEL INSIDE {{ content }}



JEKYLL STRUCTURE
    index.[md or html] is the main page of a jekyll site >> BECAUSE it's the index page (you know, basic url)


CONCEPT
    _layouts is where you store your layout s. A layout is a reusable piece of html.
    layout is a reserved keyword in jekyll
        Source: https://jekyllrb.com/docs/frontmatter/
    the other keywords are yours to decide!
        To call them
        """
        ---
        layout: post
        title:  "Welcome to Jekyll!"
        date:   2017-06-01 19:45:10 -0400
        categories: jekyll update
        ---

        """

MANAGING VARIABLES
        The variable default_path gets assigned the value of site.pages
        """
            {% assign default_paths = site.pages
        """
        
        | is to chain for a specific filter


        In this example, assume the object site.pages contains all the metadata for a website. Using assign with the map filter creates a variable that contains only the values of the category properties of everything in the site.pages object.
        """
            {% assign all_categories = site.pages | map: "category" %}
        """
            Creates an array of values by extracting the values of a named property from another object.

IF STATEMENT

    This is to 
        1 - Extract all the pages (.md) from the site
        2 - map only the 'path' parameters (https://shopify.github.io/liquid/filters/map/)
        3 - Then, iterate all the pages extracted in 1
        4 - If the page path (page.path)
        """
            {% assign all_categories = site.pages | map: "path" %}
            {% for post in all_categories %}
                {% if post contains "beers" %}
                    <li>
                        {{post}}
                    </li>
                {% endif %}
            {% endfor %}            
        """


HOW TO MANAGE PAGES

        """
            layout: page
        """

GULP FILE

var gulp = require('gulp');
var shell = require('gulp-shell');
var browserSync = require('browser-sync').create();
/*var uncss = require('gulp-uncss');*/
/*var minifycss = require('gulp-minify-css');*/

gulp.task('build', shell.task(['jekyll build --watch']));


gulp.task('serve', function () {

	browserSync.init({server: {baseDir: '_site/'}});

	gulp.watch('_site/**/*.*').on('change', browserSync.reload);

});


gulp.task('default', ['build','serve']);

STEPS

    1 - jekyll new [nameOfTheSite]
    2 - cd [nameOfTheSite]
    3 - npm install -g glup
    4 - npm install --save-dev gulp-shell lodash gulp browser-sync


